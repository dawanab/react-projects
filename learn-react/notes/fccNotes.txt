USING PROPS WITH STATELESS FUNCTIONAL CCOMPONENTS ------------------------>
    > A stateless functional component is any function you write which 
    accepts props and returns JSX. 

    > A stateless component is a class that extends React.Component, but does 
    not use internal state.

    > A stateful component is a class component that does maintain its own 
    internal state; referred to a React components. 


CREATE A STATEFUL COMPONENT ----------------------------------------------->
    > State consists of any data your application needs to know about, that 
    can change over time. 
    > You want your apps to respond to state changes and present an updated 
    UI when necessary. 

    > You create state in a React component by declaring a state property on 
    the component class in its constructor. This initializes the component 
    with state when it is created. 
    > You have access to the state object throughout the life of your 
    component. You can update it, render it in your UI, and pass it as props
    to child components. 


RENDER STATE IN THE UI ---------------------------------------------------->
    > If a component is stateful, it will always have access to the data in 
    state in its rener() method. You can access the data with this.state. 

    > React uses a virtualDOM to keep track of changes behind the scenes. 
    When state data updates, it triggers a re-render of the components using 
    that data. React updates the actual DOM, but only when necessary. 
    This means you don't have to worry about changing the DOM, you just 
    declare what the UI should look like. 

    > If you make a component stateful, no other components are aware of its 
    state. It's state is local to that component, unless you pass state data
    to a child component as props. 















REFERENCES:
FreeCodeCamp.org freecodecamp.org (n.d). retrieved August 2, 2022 from 
https://www.freecodecamp.org/learn/front-end-development-libraries/react/set-state-with-this-setstate