########################### COMPONENTS ##############################
Components are reusable elements. They allow the UI to be simpler, modular, 
and reusable. 

I. What is a Component? ------------------------------------------->
    > A component is a piece of the UI. It splits the UI into reusable and 
    independent parts, each that can be processed separately. 


II. Types of Components ------------------------------------------->
    1. Functional Components - these do not have a state of their own, and they
    only have a render method. They are referred to as stateless components.
    By using props, they derive data from other components. 

    2. Class Components - these hold and manage their unique state and have a 
    separate render method to return JSX on screen. They are referred to as 
    stateful components.


III. React Nesting Components -------------------------------------->
    > The components nested inside parent compoenents are called child components. Import and export keywords facilitate nesting of components. 

    > export - used to export a particular module or file and use in another module.
    > import - used to import a particular module or file and use it in the 
    existing module. 

    > ex) import { Class1, Class2  from "./Componets";


IV. React Component Lifecycle --------------------------------------->
    > Each component has a lifecycle that you can monitor and change during its
    three main phases: Mounting, Updating, and Unmounting. You can use lifecycle 
    methods to run a part of code at a particular time in the process. 

    1. Mounting - the phase when the componnent is mounted on the DOM and then 
    rendered to the page. These methods are called in the following order when 
    an element is being created and inserted into the DOM:
        > componentWillMount(): called right before we mount the component to the DOM. Executed before the first render. All tasks that have to be done before the componnent mounts are defined here.

        > render(): mounts the component on the browser.

        > componentDidMount(): Called right after the component is mounted on the DOM; called onnce after the render() is executed for the first time; typically API calls are done here.

    2. Updating - the phase when state or props in a compoenent get updated; allows the application to 'react' to user inputs, and ultumatelt create a responsive web user interface; methods called in order are:
        > componentWillReceiveProps(): called before a component gets props reassigned

        > setState(): can be called explicitly anytime; updates state 

        > shouldComponentUpdate(): called before rendering a component and tells React if it should update the component upon receiving new props or state; takes the new state and props and determines if it needs to update by returning true or false

        > componentWillUpdate(): called once before the render()

        > render(): compoenent gets rendered when this is called 

        > componentDidUpdate(): called once after the render()

    3. Unmounting - the phase where the component us unmounted from the DOM. it only has one method:
        > componentWillUnmount() - called once before we remove the component from the page and marks the end of the lifecycle.

        
